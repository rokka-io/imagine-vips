name: PHPStan and PHPUnit tests

on:
  push:
  pull_request:

jobs:
  tests:
    name: PHP ${{ matrix.php }} ${{ matrix.settings }} ${{ matrix.COMPOSER_FLAGS }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

      matrix:
        php: ['7.4', '8.0', '8.1', '8.2']
        settings: ['both', 'vips-only', 'ffi-only']
        COMPOSER_FLAGS: ['']

        include:
          - php: '7.2'
            settings: 'vips-only'
          - php: '7.3'
            settings: 'vips-only'
          - php: '8.0'
            COMPOSER_FLAGS: "--prefer-lowest"
            settings: 'vips-only'
          - php: '8.0'
            COMPOSER_FLAGS: "--prefer-lowest"
            settings: 'both'
          - php: '8.0'
            COMPOSER_FLAGS: "--prefer-lowest"
            settings: 'ffi-only'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Settings
        id: set_var
        run: |
          echo "SETTINGS_JSON=$(jq -c . < .github/workflows/settings/${{ matrix.settings }}.json)" >> $GITHUB_ENV

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: none
          extensions: ${{fromJson(env.SETTINGS_JSON).extensions}}

      - name: Install vips
        run: sudo apt install -y  ${{fromJson(env.SETTINGS_JSON).aptinstall}} --no-install-recommends

      - name: Install vips extension
        run: sudo pecl install vips
        if: fromJson(env.SETTINGS_JSON).aptinstall == 'libvips-dev'

      - name: Install vips ext config
        run:  echo "extension=vips.so" >> $(php -i | grep /.+/php.ini -oE)
        if: fromJson(env.SETTINGS_JSON).aptinstall == 'libvips-dev'

      - name: Install composer dependencies
        run: |
          composer update --prefer-dist --no-interaction --no-progress --no-ansi ${{ matrix.COMPOSER_FLAGS || '' }}

      - name: PHPStan
        run: composer phpstan

      - name: PHPUnit
        run: composer phpunit

      - name: Composer audit
        run: composer audit